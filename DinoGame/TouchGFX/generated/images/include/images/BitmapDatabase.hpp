// Generated by imageconverter. Please, do not edit!

#ifndef TOUCHGFX_BITMAPDATABASE_HPP
#define TOUCHGFX_BITMAPDATABASE_HPP

#include <touchgfx/hal/Types.hpp>
#include <touchgfx/Bitmap.hpp>

const uint16_t BITMAP_ALTERNATE_THEME_IMAGES_CONTAINERS_MEDIUM_WIDE_OUTLINED_NEUTRAL_ID = 0;
const uint16_t BITMAP_CLOUD_ID = 1;
const uint16_t BITMAP_GROUND_ID = 2;
const uint16_t BITMAP_MARIO1_ID = 3;
const uint16_t BITMAP_MARIO2_ID = 4;
const uint16_t BITMAP_MARIO3_ID = 5;
const uint16_t BITMAP_MARIO4_ID = 6;
const uint16_t BITMAP_MARIO5_ID = 7;
const uint16_t BITMAP_MARIO6_ID = 8;
const uint16_t BITMAP_MARIO7_ID = 9;
const uint16_t BITMAP_MARIO8_ID = 10;
const uint16_t BITMAP_PIPE1_ID = 11;
const uint16_t BITMAP_PIPE2_ID = 12;
const uint16_t BITMAP_TREE1_ID = 13;
const uint16_t BITMAP_TREE2_ID = 14;
const uint16_t BITMAP_TREE3_ID = 15;
const uint16_t BITMAP_TREE4_ID = 16;
const uint16_t BITMAP_TURTLE1_ID = 17;
const uint16_t BITMAP_TURTLE2_ID = 18;
const uint16_t BITMAP_WALL_ID = 19;

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance();
uint16_t getInstanceSize();
} // namespace BitmapDatabase

#endif // TOUCHGFX_BITMAPDATABASE_HPP
